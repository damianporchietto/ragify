# Ragify Configuration File
# This file contains all configurable parameters for the RAG system

# Server Configuration
server:
  port: 5000
  debug: false  # Set to true only for development
  host: "0.0.0.0"
  # Security settings
  max_content_length: 16777216  # 16MB max request size
  rate_limit:
    enabled: true
    requests_per_minute: 5
    burst_limit: 2

# Model Configuration
models:
  # Default providers and models
  defaults:
    llm_provider: "vertexai"  # openai or vertexai
    llm_model: "gemini-2.5-flash"  # Uses provider default if null
    embedding_provider: "vertexai"  # openai or vertexai
    embedding_model: "text-multilingual-embedding-002"  # Uses provider default if null
    temperature: 0
    openai_api_key: null # OpenAI API Key (can be overridden by OPENAI_API_KEY env var)
    google_service_account_path: "./vertex_service_account.json"  # Path to Google service account JSON file
  
  # Provider-specific default models
  provider_defaults:
    openai:
      llm_model: "gpt-4o-mini"
      embedding_model: "text-embedding-3-large"
    vertexai:
      llm_model: "gemini-2.5-flash"
      embedding_model: "text-multilingual-embedding-002"
      project: "development-466318"  # Google Cloud project ID
      region: "us-east5"  # Google Cloud region

# Document Processing Configuration
document_processing:
  chunk_size: 1000
  chunk_overlap: 200
  supported_extensions:
    - "json"
    - "txt" 
    - "md"
    - "pdf"

# Retrieval Configuration
retrieval:
  search_type: "similarity"
  top_k_results: 4

# Vector Store Configuration
vector_store:
  provider: "qdrant"  # qdrant or faiss
  qdrant_url: "http://localhost:6333"
  qdrant_collection_name: "ragify"
  qdrant_distance_metric: "Cosine"

# Testing Configuration
testing:
  default_timeout: 60
  health_check_timeout: 5
  default_api_url: "http://localhost:5000"
  default_questions:
    - "What is the capital of France?"
    - "How do I make sourdough bread?"
    - "What equipment do I need for a podcast?"
    - "What are the best practices for data security?"
    - "What are the steps to create a website?"

# System Prompt Template
prompts:
  rag_template: |
    You are a helpful assistant in your late 20s—smart, grounded, and easy to talk to. 
    You are a polyglot, please answer in the language of the user. 
    Think of yourself as the kind of person someone would message for advice or explanations they can actually understand. 
    You're knowledgeable, but never show-offy. Friendly, but not fake. 
    The kind of vibe you'd get from someone explaining things over a quiet coffee or casual DM thread—not a lecture, not a sales pitch.

    Your golden rule: Only respond using the information provided in the context block.
    If the user asks something that isn't covered by the context, you don’t guess, infer, or fill in blanks.
    Instead, just say you don’t have that info and (politely) suggest they rephrase or check somewhere else if needed.

    Your style is:

    Casual, clear, and conversational. No robotic phrasing.

    Natural-sounding responses, like a smart friend talking—not a corporate bot or tech manual.

    No bullet points or numbered lists. Just smooth, direct explanations.

    Short intros or small talk are fine if it helps the response feel human, but don’t ramble.

    Be honest. If something’s missing, say so.

    Context:
    {context}

    User Question:
    {query}

    Your task:
    Respond naturally, like a real person would in a chat. Use only the information in the context.
    If it’s not there, acknowledge that directly and move on. Keep it warm, smart, and human.

    Answer:

# API Documentation Template
api_docs:
  title: "Ragify - RAG Framework API"
  description: "API for knowledge-based question answering using Retrieval Augmented Generation."
  # The full HTML template will be loaded from a separate file for better maintainability
  
# Directory Paths
paths:
  docs_dir: "docs"
  storage_dir: "storage"
  results_dir_prefix: "results"

# Environment Variables Mapping
# These define which environment variables override which config values
env_overrides:
  OPENAI_API_KEY: null  # Always from env
  PORT: "server.port"
  FLASK_DEBUG: "server.debug"
  LLM_PROVIDER: "models.defaults.llm_provider"
  LLM_MODEL: "models.defaults.llm_model"
  EMBEDDING_PROVIDER: "models.defaults.embedding_provider"
  EMBEDDING_MODEL: "models.defaults.embedding_model"
  OPENAI_LLM_MODEL: "models.provider_defaults.openai.llm_model"
  OPENAI_EMBEDDING_MODEL: "models.provider_defaults.openai.embedding_model"
  GOOGLE_SERVICE_ACCOUNT_PATH: "models.defaults.google_service_account_path"
  VERTEX_PROJECT: "models.provider_defaults.vertexai.project"
  VERTEX_REGION: "models.provider_defaults.vertexai.region"
  VERTEX_LLM_MODEL: "models.provider_defaults.vertexai.llm_model"
  VERTEX_EMBEDDING_MODEL: "models.provider_defaults.vertexai.embedding_model"